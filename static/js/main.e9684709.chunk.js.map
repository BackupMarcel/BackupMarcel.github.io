{"version":3,"sources":["Crypto.js","index.js"],"names":["Content","Layout","TextArea","Input","Property","e","property","this","props","key","target","value","update","Item","name","id","prefix","icon","faKey","className","type","placeholder","autoComplete","onChange","onChangeKey","faFile","onChangeValue","Component","Properties","index","propertiesRef","React","createRef","state","propertiesPos","properties","goTo","length","splice","map","propertyCurrent","pos","setState","prevState","label","gutter","span","size","disabled","onClick","prev","faChevronLeft","addProperty","removeProperty","next","faChevronRight","ref","afterChange","onChangePropertiesPos","dotPosition","updateProperty","CryptoInput","mode","inputEncrypt","inputDecrypt","iv","reduce","result","push","toLowerCase","input","packProperties","onEncrypt","onDecrypt","layout","onFinish","Group","onChangeMode","rows","onChangeInputEncrypt","onChangeInputDecrypt","onChangeIv","onChangeProperties","htmlType","CryptoResult","select","error","status","title","onFocus","encryption","decryption","Crypto","bind","step","propertiesStr","JSON","stringify","CryptoJS","SHA256","lib","WordArray","random","cipher","AES","encrypt","CBC","padding","pad","Pkcs7","enc","Base64","ciphertext","setStep","parse","decrypt","Utf8","text","onResultFinish","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9684709.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Row, Col, Layout, Card, Carousel, Form, Input, Button, Radio, Result } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faKey, faFile, faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons'\nimport CryptoJS from 'crypto-js';\n\nconst { Content } = Layout;\nconst { TextArea } = Input;\n\nclass Property extends Component {\n    onChangeKey(e) {\n        var property = {...this.props.property};\n        property.key = e.target.value\n\n        this.props.update(property)\n    }\n\n    onChangeValue(e) {\n        var property = {...this.props.property};\n        property.value = e.target.value\n\n        this.props.update(property)\n    }\n\n    render() {\n        return (\n            <div>\n                <Form.Item name={'key' + this.props.property.id}>\n                    <Input \n                    prefix={<FontAwesomeIcon \n                    icon={faKey} \n                    className=\"icon-input\" />} \n                    type=\"text\" \n                    placeholder=\"Key\" \n                    value={this.props.property.key} \n                    autoComplete=\"off\" \n                    onChange={(e) => this.onChangeKey(e)} \n                />\n                </Form.Item>\n                <Form.Item name={'value' + this.props.property.id}>\n                    <Input \n                        prefix={<FontAwesomeIcon \n                        icon={faFile} \n                        className=\"icon-input\" />} \n                        type=\"text\" \n                        placeholder=\"Value\" \n                        value={this.props.property.value} \n                        autoComplete=\"off\"\n                        onChange={(e) => this.onChangeValue(e)} \n                    />\n                </Form.Item>\n            </div>\n        );\n    }\n}\n\nclass Properties extends Component {\n    constructor(props) {\n        super(props);\n\n        this.index = 0;\n        this.propertiesRef = React.createRef();\n        this.state = {\n            propertiesPos: 0,\n            properties: [{id: this.index}]\n        }\n    }\n\n    addProperty() {\n        this.index = this.index + 1\n        const property = {\n            id: this.index,\n            key: '',\n            value: ''\n        }\n        const properties = [...this.props.properties, property];\n        this.props.onChange(properties);\n        this.propertiesRef.goTo(this.props.properties.length)\n    }\n\n    removeProperty(index) {\n        const properties = [...this.props.properties];\n        properties.splice(index, 1);\n        this.props.onChange(properties);\n        this.propertiesRef.goTo(this.state.propertiesPos)\n    }\n\n    updateProperty(property) {\n        const properties = this.props.properties.map(propertyCurrent =>\n            propertyCurrent.id === property.id ? property : propertyCurrent\n        );\n\n        this.props.onChange(properties);\n    }\n\n    onChangePropertiesPos(pos) {\n        this.propertiesRef.goTo(pos);\n        this.setState(prevState => ({\n            propertiesPos: pos\n        }))\n    }\n\n    render() {\n        return (\n            <Form.Item label={<div>Properties <small>Text</small></div>}>\n                <Row gutter={[5, 15]}>\n                    <Col span={24}>\n                            <Row gutter={5}>\n                                <Col span={3}>\n                                    <Button size=\"small\" className=\"button-step\" disabled={this.state.propertiesPos <= 0} onClick={() => this.propertiesRef.prev()}>\n                                        <FontAwesomeIcon icon={faChevronLeft} />\n                                    </Button>\n                                </Col>\n                                <Col span={9} className=\"align-center property-current\">\n                                    <Button size=\"small\" className=\"button-step\" onClick={() => this.addProperty()}>\n                                        Add\n                                    </Button>\n                                </Col>\n                                <Col span={9} className=\"align-center property-current\">\n                                    <Button size=\"small\" className=\"button-step\" disabled={this.props.properties.length <= 0} onClick={() => this.removeProperty(this.state.propertiesPos)}>\n                                        Remove\n                                    </Button>\n                                </Col>\n                                <Col span={3} className=\"align-right\">\n                                    <Button size=\"small\" className=\"button-step\" disabled={this.state.propertiesPos >= this.props.properties.length - 1} onClick={() => this.propertiesRef.next()}>\n                                        <FontAwesomeIcon icon={faChevronRight} />\n                                    </Button>\n                                </Col>\n                            </Row>\n                    </Col>\n                    <Col span={24}>\n                        <Carousel ref={(ref) => this.propertiesRef = ref} afterChange={(pos) => this.onChangePropertiesPos(pos)} dotPosition=\"top\" className=\"properties-content\">\n                            {\n                                this.props.properties.map((property, index) => {\n                                    return <Property key={property.id} update={(property) => this.updateProperty(property)} property={property} />\n                                })\n                            }\n                        </Carousel>\n                    </Col>  \n                </Row>\n            </Form.Item>\n        )\n    };\n}\n\nclass CryptoInput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.index = 0;\n        this.state = {\n            mode: 0,\n            inputEncrypt: '',\n            inputDecrypt: '',\n            iv: '',\n            properties: [{id: this.index}]\n        }\n    }\n\n    packProperties(properties) {\n        const packed = properties.reduce(function(result, property) {\n            if (typeof property.key === 'string' && property.key !== '' && \n                typeof property.value === 'string' && property.value !== '') {\n                result.push([property.key.toLowerCase(), property.value]);\n            }\n\n            return result\n        }, []);\n\n        return packed;\n    }\n\n    onChangeMode(mode) {\n        this.setState(prevState => ({\n            mode: mode\n        }))\n    }\n\n    onChangeInputEncrypt(input) {\n        this.setState(prevState => ({\n            inputEncrypt: input\n        }))\n    }\n\n    onChangeInputDecrypt(input) {\n        this.setState(prevState => ({\n            inputDecrypt: input\n        }))\n    }\n\n    onChangeIv(iv) {\n        this.setState(prevState => ({\n            iv: iv\n        }))\n    }\n\n    onChangeProperties(properties) {\n        this.setState(prevState => ({\n            properties: properties\n        }))\n    }\n\n    onFinish() {\n        const properties = this.packProperties(this.state.properties);\n        if (this.state.mode === 0) {\n            this.props.onEncrypt(this.state.inputEncrypt, properties);\n        }\n        else if (this.state.mode === 1) {\n            this.props.onDecrypt(this.state.inputDecrypt, this.state.iv, properties);\n        }\n    }\n\n    render() {\n        return (\n            <Form className=\"form-crypto-input\" layout=\"vertical\" onFinish={() => this.onFinish()}>\n                <Row gutter={[5, 0]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Mode\">\n                            <Radio.Group onChange={(e) => this.onChangeMode(e.target.value)} value={this.state.mode}>\n                                <Radio value={0}>Encrypt</Radio>\n                                <Radio value={1}>Decrypt</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n                    </Col>\n                    {\n                        this.state.mode === 0 &&\n                        <Col span={24}>\n                            <Form.Item label={<div>Input <small>Text</small></div>}>\n                                <TextArea rows={1} value={this.state.inputEncrypt} autoComplete=\"off\" onChange={(e) => this.onChangeInputEncrypt(e.target.value)} />\n                            </Form.Item>\n                        </Col>\n                    }\n                    {\n                        this.state.mode === 1 &&\n                        <Col span={24}>\n                            <Form.Item label={<div>Input <small>Base64</small></div>}>\n                                <Input type=\"text\" value={this.state.inputDecrypt} autoComplete=\"off\" onChange={(e) => this.onChangeInputDecrypt(e.target.value)} />\n                            </Form.Item>\n                        </Col>\n                    }\n                    {\n                        this.state.mode === 1 &&\n                        <Col span={24}>\n                            <Form.Item label={<div>IV <small>Base64</small></div>}>\n                                <Input type=\"text\" value={this.state.iv} autoComplete=\"off\" onChange={(e) => this.onChangeIv(e.target.value)} />\n                            </Form.Item>\n                        </Col>\n                    }\n                    <Col span={24}>\n                        <Properties properties={this.state.properties} onChange={(properties) => this.onChangeProperties(properties)} />\n                    </Col>\n                    <Col span={24}>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"button-submit\">\n                                {this.state.mode === 0 ? 'Encrypt' : 'Decrypt'}\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        )\n    };\n}\n\nclass CryptoResult extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n        }\n    }\n\n    onFocus(e) {\n        e.target.select();\n    }\n\n    render() {\n        return (\n            <Form className=\"form-crypto-result\" layout=\"vertical\">\n                <Row gutter={[0, 0]}>\n                    <Col span={24}>\n                        {\n                            this.props.result.error \n                            ? <Result  status=\"error\" title={this.props.result.mode === 0 ? 'Encryption failed' : 'Decryption failed'} />\n                            : <Result status=\"success\" title={this.props.result.mode === 0 ? 'Encryption success' : 'Decryption success'}/>\n                        }\n                    </Col>\n                    {\n                        this.props.result.key &&\n                        <Col span={24}>\n                            <Form.Item label={<div>Key <small>Base64</small></div>}>\n                                <Input type=\"text\" value={this.props.result.key} className=\"input-hide\" onFocus={this.onFocus} />\n                            </Form.Item>\n                        </Col>\n                    }\n                    {\n                        this.props.result.iv &&\n                        <Col span={24}>\n                            <Form.Item label={<div>IV <small>Base64</small></div>}>\n                                <Input type=\"text\" value={this.props.result.iv} onFocus={this.onFocus} />\n                            </Form.Item>\n                        </Col>\n                    }\n                    {\n                        !this.props.result.error &&\n                        <Col span={24}>\n                            <Form.Item label={<div>Result <small>{this.props.result.mode === 0 ? 'Base64' : 'Text'}</small></div>}>\n                                <TextArea rows={1} value={this.props.result.mode === 0 ? this.props.result.encryption : this.props.result.decryption} onFocus={this.onFocus} />\n                            </Form.Item>\n                        </Col>\n                    }\n                    <Col span={24}>\n                        <Form.Item>\n                            <Button type=\"primary\" className=\"button-submit\" onClick={() => {this.props.onFinish()}}>\n                                Close\n                            </Button>\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        )\n    };\n}\n\nclass Crypto extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onEncrypt = this.onEncrypt.bind(this);\n        this.onDecrypt = this.onDecrypt.bind(this);\n\n        this.state = {\n            step: 0\n        }\n    }\n\n    onEncrypt(input, properties) {\n        const propertiesStr = JSON.stringify(properties, null, 0);\n        const key = CryptoJS.SHA256(propertiesStr);\n        const iv = CryptoJS.lib.WordArray.random(16);\n        const cipher = CryptoJS.AES.encrypt(input, key, {\n            iv: iv, \n            mode: CryptoJS.mode.CBC,        //CBC (default), CFB, CTR, OFB, ECB \n            padding: CryptoJS.pad.Pkcs7     //Pkcs7 (default), Iso97971, AnsiX923, Iso10126, ZeroPadding, NoPadding\n        });\n\n        var encryption = CryptoJS.enc.Base64.stringify(cipher.ciphertext);\n\n        this.result = {\n            mode: 0,\n            key: CryptoJS.enc.Base64.stringify(key),\n            iv: CryptoJS.enc.Base64.stringify(iv),\n            encryption: encryption,\n        };\n        this.setStep(1);\n    }\n\n    onDecrypt(input, iv, properties) {\n        const propertiesStr = JSON.stringify(properties, null, 0);\n        const key = CryptoJS.SHA256(propertiesStr);\n        iv = CryptoJS.enc.Base64.parse(iv);\n        const cipher = CryptoJS.AES.decrypt(input, key, {\n            iv: iv, \n            mode: CryptoJS.mode.CBC, \n            padding: CryptoJS.pad.Pkcs7\n        });\n\n        var decryption = null;\n        try {\n            decryption = CryptoJS.enc.Utf8.stringify(cipher);\n        } catch (error) {\n\n        }\n\n        if (decryption) {\n            this.result = {\n                mode: 1,\n                decryption: decryption\n            };\n        } else {\n            this.result = {\n                mode: 1,\n                error: true\n            };\n        }\n\n        this.setStep(1);\n    }\n\n    onResultFinish(text, mode, properties) {\n        this.setStep(0);\n    }\n\n    setStep(state) {\n        this.setState({\n            step: state\n        });\n    }\n\n    render() {\n        return (\n            <Layout className=\"layout\">\n                <Content className=\"layout-content\">\n                    <Card className=\"card\">\n                    {\n                        this.state.step === 0 && <CryptoInput onEncrypt={this.onEncrypt} onDecrypt={this.onDecrypt} />\n                    }\n                    {\n                        this.state.step === 1 && <CryptoResult result={this.result} onFinish={() => {this.onResultFinish()}} />\n                    }\n                    </Card>\n                </Content>\n            </Layout>\n        )\n    };\n}\n\nexport default Crypto\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Crypto from './Crypto';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Crypto />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}